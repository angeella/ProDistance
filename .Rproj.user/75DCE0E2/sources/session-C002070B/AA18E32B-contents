####HCLUST
rm(list = ls())
library(dplyr)
library(ggplot2)
library(dendextend)
library(purrr)
library(rotoDistance)
library("reshape2")
library(dynamicTreeCut)
library(ggdendro)


data("covFoodData")
load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/output_R_dist.RData")


hc <- hclust(as.dist(out))
plot(hc)

hc2 <- cutree(hc, k=6)


#Fancy dendogram
dendro <- as.dendrogram(hc)

dendro.col <- dendro %>%
  set("branches_k_color",
      k = 6,
      value =   c(hcl.colors(6, palette = "set 2"))) %>%
  set("branches_lwd", .9) %>%
  set("labels_colors",
      value = c("darkslategray")) %>%
  set("labels_cex", 0.5)
ggd1 <- as.ggdend(dendro.col)
ggplot(ggd1, theme = theme_minimal()) +
  labs(x = "Subjects", y = "Height")
data("covFoodData")
covFoodData$appetite_post_scaled <- (covFoodData$appetite_post - min(covFoodData$appetite_post))/(max(covFoodData$appetite_post) -min(covFoodData$appetite_post))
covFoodData$diet_importance_scaled <- (covFoodData$diet_importance - min(covFoodData$diet_importance))/(max(covFoodData$diet_importance) -min(covFoodData$diet_importance))
covFoodData$appetite_pre_scaled <- (covFoodData$appetite_pre - min(covFoodData$appetite_pre))/(max(covFoodData$appetite_pre) -min(covFoodData$appetite_pre))
covFoodData$diet_success_scaled <- (covFoodData$diet_success - min(covFoodData$diet_success))/(max(covFoodData$diet_success) -min(covFoodData$diet_success))
covFoodData$diet_importance_cat <-cut(covFoodData$diet_importance_scaled, 3)
covFoodData$diet_success_cat <-cut(covFoodData$diet_success_scaled, 3)
covFoodData$appetite_pre_cat <-cut(covFoodData$appetite_pre_scaled, 3)
covFoodData$appetite_post_cat <-cut(covFoodData$appetite_post_scaled, 3)
clust.num <- cutree(hc, k = 6)
covFoodData$ID <- seq(nrow(covFoodData))
covFoodData <- covFoodData[,c("ID","cycle_phase_covariate",
                              "diet_importance_cat", "appetite_pre_cat", "appetite_post_cat")]
synthetic.customers.cl <- cbind(covFoodData, clust.num)

cust.long <- melt(data.frame(lapply(synthetic.customers.cl, as.character),
                             stringsAsFactors=FALSE),
                  id = c("ID", "clust.num"), factorsAsStrings=T)

cust.long.q <- cust.long %>%
  group_by(clust.num, variable, value) %>%
  mutate(count = n_distinct(ID)) %>%
  distinct(clust.num, variable, value, count)

# heatmap.c will be suitable in case you want to go for absolute counts - but it doesn't tell much to my taste

cust.long.q$merge <- paste0(cust.long.q$variable, "_",cust.long.q$value)
heatmap.c <- ggplot(cust.long.q, aes(x = clust.num,
                                     y = merge)) +

  geom_tile(aes(fill = count))+
  scale_fill_gradient2(low = "darkslategray1", mid = "yellow", high = "turquoise4")
# calculating the percent of each factor level in the absolute count of cluster members
cust.long.p <- cust.long.q %>%
  group_by(clust.num, variable) %>%
  mutate(Percentage = count / sum(count)) %>%
  arrange(clust.num)


variable_name <- c(rep("Diet importance",3),
                               rep("Cycle phase",3),
                               rep("Appetite pre experiment",3),
                               rep("Appetite post experiment",3))

variable_name2 <- c(levels(covFoodData$diet_importance_cat),
                                levels(covFoodData$cycle_phase_covariate),
                                levels(covFoodData$appetite_pre_cat),
                                levels(covFoodData$appetite_post_cat))


heatmap.p <- ggplot(cust.long.p, aes(x = clust.num, y = merge)) +

  geom_tile(aes(fill = Percentage), alpha = 0.85)+
  labs(title = "Distribution of characteristics across clusters",
       x = "Cluster number", y = NULL) +
  geom_hline(yintercept = 3.5) +
  geom_hline(yintercept = 6.5) +
  geom_hline(yintercept = 9.5) +
  scale_fill_gradient2(low = "darkslategray1", mid = "yellow",
                       high = "turquoise4")+
  scale_y_discrete(labels=(levels(factor(paste(variable_name,
                                                  paste0("",variable_name2,""),sep="\n")))))
heatmap.p

#Boxplot

data("covFoodData")
covFoodData$appetite_post_scaled <- (covFoodData$appetite_post - min(covFoodData$appetite_post))/(max(covFoodData$appetite_post) -min(covFoodData$appetite_post))
covFoodData$diet_importance_scaled <- (covFoodData$diet_importance - min(covFoodData$diet_importance))/(max(covFoodData$diet_importance) -min(covFoodData$diet_importance))
covFoodData$appetite_pre_scaled <- (covFoodData$appetite_pre - min(covFoodData$appetite_pre))/(max(covFoodData$appetite_pre) -min(covFoodData$appetite_pre))
covFoodData$diet_success_scaled <- (covFoodData$diet_success - min(covFoodData$diet_success))/(max(covFoodData$diet_success) -min(covFoodData$diet_success))
covFoodData$diet_importance_cat <-cut(covFoodData$diet_importance_scaled, 3)
covFoodData$diet_success_cat <-cut(covFoodData$diet_success_scaled, 3)
covFoodData$appetite_pre_cat <-cut(covFoodData$appetite_pre_scaled, 3)
covFoodData$appetite_post_cat <-cut(covFoodData$appetite_post_scaled, 3)


cbind(covFoodData, clust.num) %>%
  dplyr::select(appetite_pre_scaled, appetite_post_scaled, diet_importance_scaled, clust.num) %>%
  mutate(clust.num = as.factor(clust.num)) %>%
  tidyr::gather(cols, value, -clust.num) %>%
  ggplot(aes(x = value, group = clust.num, fill = clust.num)) +
  geom_boxplot() + facet_wrap(cols~ .,  scales = "free",
                              labeller = as_labeller(c(
                                'appetite_post_scaled'="Appetite post exp",
                                'appetite_pre_scaled'="Appetite pre exp",
                                'diet_importance_scaled'="Diet Importance"
                              ))) +
  theme(text = element_text(size = 20))+ xlab("") +
  scale_fill_manual(values=hcl.colors(6, palette = "set 2")) +
  guides(fill=guide_legend(title="Clusters")) + theme_classic()

#############################X-ALIGNED#######################################
rm(list = ls())
data("covFoodData")
load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/output_img_dist.RData")

hc <- hclust(as.dist(out))
plot(hc)

hc2 <- cutree(hc, k=6)


#Fancy dendogram
dendro <- as.dendrogram(hc)

dendro.col <- dendro %>%
  set("branches_k_color",
      k = 6,
      value =   c(hcl.colors(6, palette = "set 2"))) %>%
  set("branches_lwd", .9) %>%
  set("labels_colors",
      value = c("darkslategray")) %>%
  set("labels_cex", 0.5)
ggd1 <- as.ggdend(dendro.col)
ggplot(ggd1, theme = theme_minimal()) +
  labs(x = "Subjects", y = "Height", title = "")
data("covFoodData")
covFoodData$appetite_post_scaled <- (covFoodData$appetite_post - min(covFoodData$appetite_post))/(max(covFoodData$appetite_post) -min(covFoodData$appetite_post))
covFoodData$diet_importance_scaled <- (covFoodData$diet_importance - min(covFoodData$diet_importance))/(max(covFoodData$diet_importance) -min(covFoodData$diet_importance))
covFoodData$appetite_pre_scaled <- (covFoodData$appetite_pre - min(covFoodData$appetite_pre))/(max(covFoodData$appetite_pre) -min(covFoodData$appetite_pre))
covFoodData$diet_success_scaled <- (covFoodData$diet_success - min(covFoodData$diet_success))/(max(covFoodData$diet_success) -min(covFoodData$diet_success))
covFoodData$diet_importance_cat <-cut(covFoodData$diet_importance_scaled, 3)
covFoodData$diet_success_cat <-cut(covFoodData$diet_success_scaled, 3)
covFoodData$appetite_pre_cat <-cut(covFoodData$appetite_pre_scaled, 3)
covFoodData$appetite_post_cat <-cut(covFoodData$appetite_post_scaled, 3)
clust.num <- cutree(hc, k = 6)
covFoodData <- covFoodData[,c("ID","cycle_phase_covariate",
                              "diet_importance_cat", "appetite_pre_cat", "appetite_post_cat")]
synthetic.customers.cl <- cbind(covFoodData, clust.num)

cust.long <- melt(data.frame(lapply(synthetic.customers.cl, as.character),
                             stringsAsFactors=FALSE),
                  id = c("ID", "clust.num"), factorsAsStrings=T)

cust.long.q <- cust.long %>%
  group_by(clust.num, variable, value) %>%
  mutate(count = n_distinct(ID)) %>%
  distinct(clust.num, variable, value, count)

# heatmap.c will be suitable in case you want to go for absolute counts - but it doesn't tell much to my taste

cust.long.q$merge <- paste0(cust.long.q$variable, "_",cust.long.q$value)
heatmap.c <- ggplot(cust.long.q, aes(x = clust.num,
                                     y = merge)) +

  geom_tile(aes(fill = count))+
  scale_fill_gradient2(low = "darkslategray1", mid = "yellow", high = "turquoise4")
# calculating the percent of each factor level in the absolute count of cluster members
cust.long.p <- cust.long.q %>%
  group_by(clust.num, variable) %>%
  mutate(Percentage = count / sum(count)) %>%
  arrange(clust.num)


variable_name <- c(rep("Diet importance",3),
                   rep("Cycle phase",3),
                   rep("Appetite pre experiment",3),
                   rep("Appetite post experiment",3))

variable_name2 <- c(levels(covFoodData$diet_importance_cat),
                    levels(covFoodData$cycle_phase_covariate),
                    levels(covFoodData$appetite_pre_cat),
                    levels(covFoodData$appetite_post_cat))


heatmap.p <- ggplot(cust.long.p, aes(x = clust.num, y = merge)) +

  geom_tile(aes(fill = Percentage), alpha = 0.85)+
  labs(title = "Distribution of characteristics across clusters",
       x = "Cluster number", y = NULL) +
  geom_hline(yintercept = 3.5) +
  geom_hline(yintercept = 6.5) +
  geom_hline(yintercept = 9.5) +
  scale_fill_gradient2(low = "darkslategray1", mid = "yellow",
                       high = "turquoise4")+
  scale_y_discrete(labels=(levels(factor(paste(variable_name,
                                               paste0("",variable_name2,""),sep="\n")))))
heatmap.p

#Boxplot

data("covFoodData")
covFoodData$appetite_post_scaled <- (covFoodData$appetite_post - min(covFoodData$appetite_post))/(max(covFoodData$appetite_post) -min(covFoodData$appetite_post))
covFoodData$diet_importance_scaled <- (covFoodData$diet_importance - min(covFoodData$diet_importance))/(max(covFoodData$diet_importance) -min(covFoodData$diet_importance))
covFoodData$appetite_pre_scaled <- (covFoodData$appetite_pre - min(covFoodData$appetite_pre))/(max(covFoodData$appetite_pre) -min(covFoodData$appetite_pre))
covFoodData$diet_success_scaled <- (covFoodData$diet_success - min(covFoodData$diet_success))/(max(covFoodData$diet_success) -min(covFoodData$diet_success))
covFoodData$diet_importance_cat <-cut(covFoodData$diet_importance_scaled, 3)
covFoodData$diet_success_cat <-cut(covFoodData$diet_success_scaled, 3)
covFoodData$appetite_pre_cat <-cut(covFoodData$appetite_pre_scaled, 3)
covFoodData$appetite_post_cat <-cut(covFoodData$appetite_post_scaled, 3)


cbind(covFoodData, clust.num) %>%
  dplyr::select(appetite_pre_scaled, appetite_post_scaled, diet_importance_scaled, clust.num) %>%
  mutate(clust.num = as.factor(clust.num)) %>%
  tidyr::gather(cols, value, -clust.num) %>%
  ggplot(aes(x = value, group = clust.num, fill = clust.num)) +
  geom_boxplot() + facet_wrap(cols~ .,  scales = "free",
                              labeller = as_labeller(c(
                                'appetite_post_scaled'="Appetite post exp",
                                'appetite_pre_scaled'="Appetite pre exp",
                                'diet_importance_scaled'="Diet Importance"
                              ))) +
  theme(text = element_text(size = 20))+ xlab("") +
  scale_fill_manual(values=hcl.colors(6, palette = "set 2")) +
  guides(fill=guide_legend(title="Clusters")) + theme_classic()


#############################X-RAW#######################################
rm(list = ls())
data("covFoodData")
load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/output_img_raw_dist.RData")

hc <- hclust(as.dist(out))
plot(hc)

hc2 <- cutree(hc, k=6)


#Fancy dendogram
dendro <- as.dendrogram(hc)

dendro.col <- dendro %>%
  set("branches_k_color",
      k = 6,
      value =   c(hcl.colors(6, palette = "set 2"))) %>%
  set("branches_lwd", .9) %>%
  set("labels_colors",
      value = c("darkslategray")) %>%
  set("labels_cex", 0.5)
ggd1 <- as.ggdend(dendro.col)
ggplot(ggd1, theme = theme_minimal()) +
  labs(x = "Subjects", y = "Height", title = "")
data("covFoodData")
covFoodData$appetite_post_scaled <- (covFoodData$appetite_post - min(covFoodData$appetite_post))/(max(covFoodData$appetite_post) -min(covFoodData$appetite_post))
covFoodData$diet_importance_scaled <- (covFoodData$diet_importance - min(covFoodData$diet_importance))/(max(covFoodData$diet_importance) -min(covFoodData$diet_importance))
covFoodData$appetite_pre_scaled <- (covFoodData$appetite_pre - min(covFoodData$appetite_pre))/(max(covFoodData$appetite_pre) -min(covFoodData$appetite_pre))
covFoodData$diet_success_scaled <- (covFoodData$diet_success - min(covFoodData$diet_success))/(max(covFoodData$diet_success) -min(covFoodData$diet_success))
covFoodData$diet_importance_cat <-cut(covFoodData$diet_importance_scaled, 3)
covFoodData$diet_success_cat <-cut(covFoodData$diet_success_scaled, 3)
covFoodData$appetite_pre_cat <-cut(covFoodData$appetite_pre_scaled, 3)
covFoodData$appetite_post_cat <-cut(covFoodData$appetite_post_scaled, 3)
clust.num <- cutree(hc, k = 6)
covFoodData <- covFoodData[,c("ID","cycle_phase_covariate",
                              "diet_importance_cat", "appetite_pre_cat", "appetite_post_cat")]
synthetic.customers.cl <- cbind(covFoodData, clust.num)

cust.long <- melt(data.frame(lapply(synthetic.customers.cl, as.character),
                             stringsAsFactors=FALSE),
                  id = c("ID", "clust.num"), factorsAsStrings=T)

cust.long.q <- cust.long %>%
  group_by(clust.num, variable, value) %>%
  mutate(count = n_distinct(ID)) %>%
  distinct(clust.num, variable, value, count)

# heatmap.c will be suitable in case you want to go for absolute counts - but it doesn't tell much to my taste

cust.long.q$merge <- paste0(cust.long.q$variable, "_",cust.long.q$value)
heatmap.c <- ggplot(cust.long.q, aes(x = clust.num,
                                     y = merge)) +

  geom_tile(aes(fill = count))+
  scale_fill_gradient2(low = "darkslategray1", mid = "yellow", high = "turquoise4")
# calculating the percent of each factor level in the absolute count of cluster members
cust.long.p <- cust.long.q %>%
  group_by(clust.num, variable) %>%
  mutate(Percentage = count / sum(count)) %>%
  arrange(clust.num)


variable_name <- c(rep("Diet importance",3),
                   rep("Cycle phase",3),
                   rep("Appetite pre experiment",3),
                   rep("Appetite post experiment",3))

variable_name2 <- c(levels(covFoodData$diet_importance_cat),
                    levels(covFoodData$cycle_phase_covariate),
                    levels(covFoodData$appetite_pre_cat),
                    levels(covFoodData$appetite_post_cat))


heatmap.p <- ggplot(cust.long.p, aes(x = clust.num, y = merge)) +

  geom_tile(aes(fill = Percentage), alpha = 0.85)+
  labs(title = "Distribution of characteristics across clusters",
       x = "Cluster number", y = NULL) +
  geom_hline(yintercept = 3.5) +
  geom_hline(yintercept = 6.5) +
  geom_hline(yintercept = 9.5) +
  scale_fill_gradient2(low = "darkslategray1", mid = "yellow",
                       high = "turquoise4")+
  scale_y_discrete(labels=(levels(factor(paste(variable_name,
                                               paste0("",variable_name2,""),sep="\n")))))
heatmap.p

#Boxplot

data("covFoodData")
covFoodData$appetite_post_scaled <- (covFoodData$appetite_post - min(covFoodData$appetite_post))/(max(covFoodData$appetite_post) -min(covFoodData$appetite_post))
covFoodData$diet_importance_scaled <- (covFoodData$diet_importance - min(covFoodData$diet_importance))/(max(covFoodData$diet_importance) -min(covFoodData$diet_importance))
covFoodData$appetite_pre_scaled <- (covFoodData$appetite_pre - min(covFoodData$appetite_pre))/(max(covFoodData$appetite_pre) -min(covFoodData$appetite_pre))
covFoodData$diet_success_scaled <- (covFoodData$diet_success - min(covFoodData$diet_success))/(max(covFoodData$diet_success) -min(covFoodData$diet_success))
covFoodData$diet_importance_cat <-cut(covFoodData$diet_importance_scaled, 3)
covFoodData$diet_success_cat <-cut(covFoodData$diet_success_scaled, 3)
covFoodData$appetite_pre_cat <-cut(covFoodData$appetite_pre_scaled, 3)
covFoodData$appetite_post_cat <-cut(covFoodData$appetite_post_scaled, 3)


cbind(covFoodData, clust.num) %>%
  dplyr::select(appetite_pre_scaled, appetite_post_scaled, diet_importance_scaled, clust.num) %>%
  mutate(clust.num = as.factor(clust.num)) %>%
  tidyr::gather(cols, value, -clust.num) %>%
  ggplot(aes(x = value, group = clust.num, fill = clust.num)) +
  geom_boxplot() + facet_wrap(cols~ .,  scales = "free",
                              labeller = as_labeller(c(
                                'appetite_post_scaled'="Appetite post exp",
                                'appetite_pre_scaled'="Appetite pre exp",
                                'diet_importance_scaled'="Diet Importance"
                              ))) +
  theme(text = element_text(size = 20))+ xlab("") +
  scale_fill_manual(values=hcl.colors(6, palette = "set 2")) +
  guides(fill=guide_legend(title="Clusters")) + theme_classic()
