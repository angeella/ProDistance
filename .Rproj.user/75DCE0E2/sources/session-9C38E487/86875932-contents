"""
Maps classifier coefficient Words Objects data

@author: Angela Andreella
"""
import nibabel as nib
from nilearn import plotting
import numpy as np
#Read data

in_path = "C:/Users/livio/Desktop/ProMises_HBM/"
mask = nib.load(in_path + "mask.nii.gz")
#nib.save( mask,in_path + "mask.nii")

maskdata = mask.get_fdata()
maskdata = np.reshape(maskdata, (64* 64* 35))


targets = np.load(in_path + "targets.npz", allow_pickle=True)
targets = targets['targets']

#Anatomical

out = np.load(in_path +"sen_mni_mean.npz")

for i in range(targets.shape[0]):
    mean_sens = out['sen_mni_mean'][i,:]
    mean_sens = np.reshape(mean_sens, (73574))
    svm = np.copy(maskdata)
    svm[svm == 1] = mean_sens
    svm = np.reshape(svm,(64,64,35))

    svm_img = nib.Nifti1Image(svm, affine=mask.affine)
    display = plotting.plot_stat_map(svm_img,
                        #  vmax = 0.4,
                           cut_coords = (-42, -68, -5),
                           threshold = np.min(svm)*0.000001,
                           title = "Anatomical alignment")     
    display.savefig(in_path + str(targets[i][0]) + str(targets[i][1]) + "SVM_an_CvsSO.pdf")

nib.save( svm_img,in_path + "SVM_an_CvsSO.nii")


#ProMises model

out = np.load(in_path +"sens_mens_promises.npz")

for i in range(targets.shape[0]):
    mean_sens = out['sens_mens_promises'][i,:]
    mean_sens = np.reshape(mean_sens, (73574))
    svm = np.copy(maskdata)
    svm[svm == 1] = mean_sens
    svm = np.reshape(svm,(64,64,35))

    svm_img = nib.Nifti1Image(svm, affine=mask.affine)
    display = plotting.plot_stat_map(svm_img,
                         threshold = np.min(svm)*0.00001,
                           cut_coords = (-42, -68, -5),
                          # vmax = 0.002,
                           title = "ProMises model")     
    display.savefig(in_path + str(targets[i][0]) + str(targets[i][1]) + "SVM_ProMises_CvsSO.pdf")

nib.save( svm_img,in_path + "svmSO_CvsSO.nii")


