#distance considering matrices aligned and not

path <- "C:/Users/livio/Desktop/mds/"
source(paste0(path,"Script/library.R"))

mask = readNifti(paste0(path,"Data/FoodData/mask.nii.gz"))
mask = ifelse(mask == 0, 0, 1)
mask = mask!=0
img_dims <- dim(mask)
sub_ids <- c(sapply(c(1:4,6:30),function(x) ifelse(x<10,paste0("0",x), paste0(x))))

img <- array(NA, dim = c(length(sub_ids),370, sum(mask==1)))
img_aligned <- array(NA, dim = c(length(sub_ids),370, sum(mask==1)))

#Raw data
for(i in c(1:length(sub_ids))){

  nii <- readNifti(paste0(path,"Data/FoodData/Raw/sub-",sub_ids[i],".nii"))[,,,1:370]
  nii <- t(matrix(nii, nrow = 64*64*30, ncol = 370))
  img[i,,] <-nii[, which(mask ==1)]

}

#Aligned data
for(i in c(1:length(sub_ids))){

  nii <- readNifti(paste0(path,"Data/FoodData/Aligned/sub-",sub_ids[i],"promises_aligned_Identityk10.nii"))[,,,1:370]
  nii <- t(matrix(nii, nrow = 64*64*30, ncol = 370))
  img_aligned[i,,] <-nii[, which(mask ==1)]
}

rm(nii)
rm(mask)
## ProMises model
dist_img_aligned <- list()
for(i in 1:29){
  dist_img_aligned[[i]] <- lapply(c(1:29), function(x) Frobenius(img_aligned[x,,], img_aligned[i,,]))

}
dist_matrix_img_aligned <- matrix(unlist(dist_img_aligned), nrow = 29, ncol = 29)

save(dist_matrix_img_aligned, file = "C:/Users/livio/Desktop/mds/Data/FoodData/Output/dist_matrix_img_aligned.RData")

load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/dist_matrix_img_aligned.RData")

stress <-c()

for(i in 1:20){

  stress[i] <- mds(dist_matrix_img_aligned,ndim = i, type = "mspline")$stress

}

ggplot()+ geom_line(aes(x = c(1:20), y = stress)) +
  geom_hline(yintercept = 0.05, color = "red", lty = 2) + theme_classic() +
  xlab("Number of dimensions") +
  geom_vline(xintercept = which(stress < 0.05)[1], color = "red", lty = 2)+
  theme(text = element_text(size=20))

opt  = which(stress < 0.05)[1]

mds_img_aligned <- mds(dist_matrix_img_aligned,ndim = opt, type = "mspline")


#Load partecipant data and marge dbs

part <- read.table("mds/Data/FoodData/participants.tsv",
                   header = T)
part <- part[c(1:4,6:30),]
db <- cbind(mds_img_aligned$conf, part)
db$ID <- c(1:29)
db$cycle_phase_covariate <- ifelse(db$cycle_phase_covariate == "0", "Luteal phase",
                                   ifelse(db$cycle_phase_covariate == "1", "Follicular and Ovulation phase", "Menstrual phase"))
db$cycle_phase_covariate  <- as.factor(db$cycle_phase_covariate)
db <- db %>% dplyr::filter(days_since_menstruationi < 60)
db <- db %>% dplyr::mutate(days_since_menstruationi_cat = cut(db$days_since_menstruationi,breaks = 3))


save(db = db, file = "mds/Data/FoodData/Output/output_mds_img_aligned.RData")

rm(db)
rm(mds_img_aligned)
rm(dist_matrix_img_aligned)

#Anatomical

## ProMises model
dist_img <- list()
for(i in 1:29){
  dist_img[[i]] <- lapply(c(1:29), function(x) Frobenius(img[x,,], img[i,,]))

}
dist_matrix_img <- matrix(unlist(dist_img), nrow = 29, ncol = 29)

save(dist_matrix_img, file = "C:/Users/livio/Desktop/mds/Data/FoodData/Output/dist_matrix_img.RData")

load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/dist_matrix_img.RData")

stress <-c()

for(i in 1:20){

  stress[i] <- mds(dist_matrix_img,ndim = i, type = "mspline")$stress

}

ggplot()+ geom_line(aes(x = c(1:20), y = stress)) +
  geom_hline(yintercept = 0.05, color = "red", lty = 2) + theme_classic() +
  xlab("Number of dimensions") +
  geom_vline(xintercept = which(stress < 0.05)[1], color = "red", lty = 2)

opt  = which(stress < 0.05)[1]

mds_img <- mds(dist_matrix_img,ndim = opt, type = "mspline")


#Load partecipant data and marge dbs

part <- read.table("mds/Data/FoodData/participants.tsv",
                   header = T)
part <- part[c(1:4,6:30),]
db <- cbind(mds_img$conf, part)
db$ID <- c(1:29)
db$cycle_phase_covariate <- ifelse(db$cycle_phase_covariate == "0", "Luteal phase",
                                   ifelse(db$cycle_phase_covariate == "1", "Follicular and Ovulation phase", "Menstrual phase"))
db$cycle_phase_covariate  <- as.factor(db$cycle_phase_covariate)
db <- db %>% dplyr::filter(days_since_menstruationi < 60)
db <- db %>% dplyr::mutate(days_since_menstruationi_cat = cut(db$days_since_menstruationi,breaks = 3))


save(db = db, file = "mds/Data/FoodData/Output/output_mds_img.RData")
