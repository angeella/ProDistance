covFoodData$cycle_phase_covariate <- as.factor(covFoodData$cycle_phase_covariate)
covFoodData$cycle_phase_covariate <-ifelse(covFoodData$cycle_phase_covariate == 0,
"Follicular and Ovulation phase",
ifelse(covFoodData$cycle_phase_covariate == 1, "Luteal phase", "Menstrual phase"))
covFoodData$cycle_phase_covariate <- as.factor(covFoodData$cycle_phase_covariate)
variable_name <- c(rep("Diet importance",3),
rep("Diet success",3),
rep("Cycle phase",3),
rep("Appetite pre experiment",3),
rep("Appetite post experiment",3))
variable_name2 <- c(levels(covFoodData$diet_importance_cat),
levels(covFoodData$diet_success_cat),
levels(covFoodData$cycle_phase_covariate),
levels(covFoodData$appetite_pre_cat),
levels(covFoodData$appetite_post_cat))
heatmap.p <- ggplot(cust.long.p, aes(x = clust.num, y = merge)) +
geom_tile(aes(fill = Percentage), alpha = 0.85)+
labs(title = "Distribution of characteristics across clusters",
x = "Cluster number", y = NULL) +
geom_hline(yintercept = 3.5) +
geom_hline(yintercept = 6.5) +
geom_hline(yintercept = 9.5) +
scale_fill_gradient2(low = "darkslategray1", mid = "yellow",
high = "turquoise4")+
scale_y_discrete(labels=(levels(factor(paste(variable_name,
paste0("",variable_name2,""),sep="\n")))))
heatmap.p
heatmap.p <- ggplot(cust.long.p, aes(x = clust.num, y = merge)) +
geom_tile(aes(fill = Percentage), alpha = 0.85)+
labs(title = "Distribution of characteristics across clusters",
x = "Cluster number", y = NULL) +
geom_hline(yintercept = 1.5) +
geom_hline(yintercept = 3.5) +
geom_hline(yintercept = 6.5) +
geom_hline(yintercept = 9.5) +
scale_fill_gradient2(low = "darkslategray1", mid = "yellow",
high = "turquoise4")+
scale_y_discrete(labels=(levels(factor(paste(variable_name,
paste0("",variable_name2,""),sep="\n")))))
heatmap.p + theme_classic()
heatmap.p <- ggplot(cust.long.p, aes(x = clust.num, y = merge)) +
geom_tile(aes(fill = Percentage), alpha = 0.85)+
labs(title = "Distribution of characteristics across clusters",
x = "Cluster number", y = NULL) +
geom_hline(yintercept = 12.5) +
geom_hline(yintercept = 3.5) +
geom_hline(yintercept = 6.5) +
geom_hline(yintercept = 9.5) +
scale_fill_gradient2(low = "darkslategray1", mid = "yellow",
high = "turquoise4")+
scale_y_discrete(labels=(levels(factor(paste(variable_name,
paste0("",variable_name2,""),sep="\n")))))
heatmap.p + theme_classic()
data("covFoodData")
covFoodData <- covFoodData[-c(7,8,9,10,12),]
covFoodData$appetite_post_scaled <- (covFoodData$appetite_post - min(covFoodData$appetite_post))/(max(covFoodData$appetite_post) -min(covFoodData$appetite_post))
covFoodData$diet_importance_scaled <- (covFoodData$diet_importance - min(covFoodData$diet_importance))/(max(covFoodData$diet_importance) -min(covFoodData$diet_importance))
covFoodData$appetite_pre_scaled <- (covFoodData$appetite_pre - min(covFoodData$appetite_pre))/(max(covFoodData$appetite_pre) -min(covFoodData$appetite_pre))
covFoodData$diet_success_scaled <- (covFoodData$diet_success - min(covFoodData$diet_success))/(max(covFoodData$diet_success) -min(covFoodData$diet_success))
covFoodData$diet_importance_cat <-cut(covFoodData$diet_importance_scaled, 3)
covFoodData$diet_success_cat <-cut(covFoodData$diet_success_scaled, 3)
covFoodData$appetite_pre_cat <-cut(covFoodData$appetite_pre_scaled, 3)
covFoodData$appetite_post_cat <-cut(covFoodData$appetite_post_scaled, 3)
cbind(covFoodData, clust.num) %>%
dplyr::select(appetite_pre_scaled, appetite_post_scaled, diet_importance_scaled, clust.num) %>%
mutate(clust.num = as.factor(clust.num)) %>%
tidyr::gather(cols, value, -clust.num) %>%
ggplot(aes(x = value, group = clust.num, fill = clust.num)) +
geom_boxplot() + facet_wrap(cols~ .,  scales = "free",
labeller = as_labeller(c(
'appetite_post_scaled'="Appetite post exp",
'appetite_pre_scaled'="Appetite pre exp",
'diet_importance_scaled'="Diet Importance",
'diet_success_scaled'="Diet Success"
))) +
theme(text = element_text(size = 20))+ xlab("") +
# scale_fill_manual(values=colors) +
guides(fill=guide_legend(title="Clusters")) + theme_classic()
cbind(covFoodData, clust.num) %>%
dplyr::select(appetite_pre_scaled, appetite_post_scaled, diet_importance_scaled, diet_success_scaled, clust.num) %>%
mutate(clust.num = as.factor(clust.num)) %>%
tidyr::gather(cols, value, -clust.num) %>%
ggplot(aes(x = value, group = clust.num, fill = clust.num)) +
geom_boxplot() + facet_wrap(cols~ .,  scales = "free",
labeller = as_labeller(c(
'appetite_post_scaled'="Appetite post exp",
'appetite_pre_scaled'="Appetite pre exp",
'diet_importance_scaled'="Diet Importance",
'diet_success_scaled'="Diet Success"
))) +
theme(text = element_text(size = 20))+ xlab("") +
# scale_fill_manual(values=colors) +
guides(fill=guide_legend(title="Clusters")) + theme_classic()
####HCLUST
rm(list = ls())
data("covFoodData")
load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/output_R_dist.RData")
covFoodData <- covFoodData[-c(7,8,9,10,12),]
hc <- hclust(as.dist(out))
plot(hc)
hc2 <- cutree(hc, k=2)
#Fancy dendogram
dendro <- as.dendrogram(hc)
dendro.col <- dendro %>%
set("branches_k_color",
k = 2,
value =   c(hcl.colors(2, palette = "set 2"))) %>%
set("branches_lwd", .9) %>%
set("labels_colors",
value = c("darkslategray")) %>%
set("labels_cex", 0.5)
ggd1 <- as.ggdend(dendro.col)
ggplot(ggd1, theme = theme_minimal()) +
labs(x = "Subjects", y = "Height", title = "")
data("covFoodData")
covFoodData <- covFoodData[-c(7,8,9,10,12),]
covFoodData$appetite_post_scaled <- (covFoodData$appetite_post - min(covFoodData$appetite_post))/(max(covFoodData$appetite_post) -min(covFoodData$appetite_post))
covFoodData$diet_importance_scaled <- (covFoodData$diet_importance - min(covFoodData$diet_importance))/(max(covFoodData$diet_importance) -min(covFoodData$diet_importance))
covFoodData$appetite_pre_scaled <- (covFoodData$appetite_pre - min(covFoodData$appetite_pre))/(max(covFoodData$appetite_pre) -min(covFoodData$appetite_pre))
covFoodData$diet_success_scaled <- (covFoodData$diet_success - min(covFoodData$diet_success))/(max(covFoodData$diet_success) -min(covFoodData$diet_success))
covFoodData$diet_importance_cat <-cut(covFoodData$diet_importance_scaled, 3)
covFoodData$diet_success_cat <-cut(covFoodData$diet_success_scaled, 3)
covFoodData$appetite_pre_cat <-cut(covFoodData$appetite_pre_scaled, 3)
covFoodData$appetite_post_cat <-cut(covFoodData$appetite_post_scaled, 3)
clust.num <- cutree(hc, k = 2)
covFoodData$ID <- seq(nrow(covFoodData))
covFoodData <- covFoodData[,c("ID","cycle_phase_covariate",
"diet_importance_cat","diet_success_cat", "appetite_pre_cat",
"appetite_post_cat")]
synthetic.customers.cl <- cbind(covFoodData, clust.num)
cust.long <- melt(data.frame(lapply(synthetic.customers.cl, as.character),
stringsAsFactors=FALSE),
id = c("ID", "clust.num"), factorsAsStrings=T)
cust.long.q <- cust.long %>%
group_by(clust.num, variable, value) %>%
mutate(count = n_distinct(ID)) %>%
distinct(clust.num, variable, value, count)
# heatmap.c will be suitable in case you want to go for absolute counts - but it doesn't tell much to my taste
cust.long.q$merge <- paste0(cust.long.q$variable, "_",cust.long.q$value)
heatmap.c <- ggplot(cust.long.q, aes(x = clust.num,
y = merge)) +
geom_tile(aes(fill = count))+
scale_fill_gradient2(low = "darkslategray1", mid = "yellow", high = "turquoise4")
# calculating the percent of each factor level in the absolute count of cluster members
cust.long.p <- cust.long.q %>%
group_by(clust.num, variable) %>%
mutate(Percentage = count / sum(count)) %>%
arrange(clust.num)
covFoodData$cycle_phase_covariate <- as.factor(covFoodData$cycle_phase_covariate)
covFoodData$cycle_phase_covariate <-ifelse(covFoodData$cycle_phase_covariate == 0,
"Follicular and Ovulation phase",
ifelse(covFoodData$cycle_phase_covariate == 1, "Luteal phase", "Menstrual phase"))
covFoodData$cycle_phase_covariate <- as.factor(covFoodData$cycle_phase_covariate)
variable_name <- c(rep("Diet importance",3),
rep("Diet success",3),
rep("Cycle phase",3),
rep("Appetite pre experiment",3),
rep("Appetite post experiment",3))
variable_name2 <- c(levels(covFoodData$diet_importance_cat),
levels(covFoodData$diet_success_cat),
levels(covFoodData$cycle_phase_covariate),
levels(covFoodData$appetite_pre_cat),
levels(covFoodData$appetite_post_cat))
heatmap.p <- ggplot(cust.long.p, aes(x = clust.num, y = merge)) +
geom_tile(aes(fill = Percentage), alpha = 0.85)+
labs(title = "Distribution of characteristics across clusters",
x = "Cluster number", y = NULL) +
geom_hline(yintercept = 12.5) +
geom_hline(yintercept = 3.5) +
geom_hline(yintercept = 6.5) +
geom_hline(yintercept = 9.5) +
scale_fill_gradient2(low = "darkslategray1", mid = "yellow",
high = "turquoise4")+
scale_y_discrete(labels=(levels(factor(paste(variable_name,
paste0("",variable_name2,""),sep="\n")))))
heatmap.p + theme_classic()
data("covFoodData")
covFoodData <- covFoodData[-c(7,8,9,10,12),]
covFoodData$appetite_post_scaled <- (covFoodData$appetite_post - min(covFoodData$appetite_post))/(max(covFoodData$appetite_post) -min(covFoodData$appetite_post))
covFoodData$diet_importance_scaled <- (covFoodData$diet_importance - min(covFoodData$diet_importance))/(max(covFoodData$diet_importance) -min(covFoodData$diet_importance))
covFoodData$appetite_pre_scaled <- (covFoodData$appetite_pre - min(covFoodData$appetite_pre))/(max(covFoodData$appetite_pre) -min(covFoodData$appetite_pre))
covFoodData$diet_success_scaled <- (covFoodData$diet_success - min(covFoodData$diet_success))/(max(covFoodData$diet_success) -min(covFoodData$diet_success))
covFoodData$diet_importance_cat <-cut(covFoodData$diet_importance_scaled, 3)
covFoodData$diet_success_cat <-cut(covFoodData$diet_success_scaled, 3)
covFoodData$appetite_pre_cat <-cut(covFoodData$appetite_pre_scaled, 3)
covFoodData$appetite_post_cat <-cut(covFoodData$appetite_post_scaled, 3)
#colors = c("#00C1B2", "#ED90A4", "#D494E1", "#CCA65A","#6FB1E7", "#7EBA68")
cbind(covFoodData, clust.num) %>%
dplyr::select(appetite_pre_scaled, appetite_post_scaled, diet_importance_scaled, diet_success_scaled, clust.num) %>%
mutate(clust.num = as.factor(clust.num)) %>%
tidyr::gather(cols, value, -clust.num) %>%
ggplot(aes(x = value, group = clust.num, fill = clust.num)) +
geom_boxplot() + facet_wrap(cols~ .,  scales = "free",
labeller = as_labeller(c(
'appetite_post_scaled'="Appetite post exp",
'appetite_pre_scaled'="Appetite pre exp",
'diet_importance_scaled'="Diet Importance",
'diet_success_scaled'="Diet Success"
))) +
theme(text = element_text(size = 20))+ xlab("") +
# scale_fill_manual(values=colors) +
guides(fill=guide_legend(title="Clusters")) + theme_classic()
rm(list = ls())
data("covFoodData")
load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/output_img_raw_dist.RData")
covFoodData <- covFoodData[-c(7,8,9,10,12),]
hc <- hclust(as.dist(out))
plot(hc)
hc2 <- cutree(hc, k=2)
#Fancy dendogram
dendro <- as.dendrogram(hc)
dendro.col <- dendro %>%
set("branches_k_color",
k = 2,
value =   c(hcl.colors(2, palette = "set 2"))) %>%
set("branches_lwd", .9) %>%
set("labels_colors",
value = c("darkslategray")) %>%
set("labels_cex", 0.5)
ggd1 <- as.ggdend(dendro.col)
ggplot(ggd1, theme = theme_minimal()) +
labs(x = "Subjects", y = "Height", title = "")
data("covFoodData")
covFoodData <- covFoodData[-c(7,8,9,10,12),]
covFoodData$appetite_post_scaled <- (covFoodData$appetite_post - min(covFoodData$appetite_post))/(max(covFoodData$appetite_post) -min(covFoodData$appetite_post))
covFoodData$diet_importance_scaled <- (covFoodData$diet_importance - min(covFoodData$diet_importance))/(max(covFoodData$diet_importance) -min(covFoodData$diet_importance))
covFoodData$appetite_pre_scaled <- (covFoodData$appetite_pre - min(covFoodData$appetite_pre))/(max(covFoodData$appetite_pre) -min(covFoodData$appetite_pre))
covFoodData$diet_success_scaled <- (covFoodData$diet_success - min(covFoodData$diet_success))/(max(covFoodData$diet_success) -min(covFoodData$diet_success))
covFoodData$diet_importance_cat <-cut(covFoodData$diet_importance_scaled, 3)
covFoodData$diet_success_cat <-cut(covFoodData$diet_success_scaled, 3)
covFoodData$appetite_pre_cat <-cut(covFoodData$appetite_pre_scaled, 3)
covFoodData$appetite_post_cat <-cut(covFoodData$appetite_post_scaled, 3)
clust.num <- cutree(hc, k = 2)
covFoodData$ID <- seq(nrow(covFoodData))
covFoodData <- covFoodData[,c("ID","cycle_phase_covariate",
"diet_importance_cat","diet_success_cat", "appetite_pre_cat",
"appetite_post_cat")]
synthetic.customers.cl <- cbind(covFoodData, clust.num)
cust.long <- melt(data.frame(lapply(synthetic.customers.cl, as.character),
stringsAsFactors=FALSE),
id = c("ID", "clust.num"), factorsAsStrings=T)
cust.long.q <- cust.long %>%
group_by(clust.num, variable, value) %>%
mutate(count = n_distinct(ID)) %>%
distinct(clust.num, variable, value, count)
# heatmap.c will be suitable in case you want to go for absolute counts - but it doesn't tell much to my taste
cust.long.q$merge <- paste0(cust.long.q$variable, "_",cust.long.q$value)
heatmap.c <- ggplot(cust.long.q, aes(x = clust.num,
y = merge)) +
geom_tile(aes(fill = count))+
scale_fill_gradient2(low = "darkslategray1", mid = "yellow", high = "turquoise4")
# calculating the percent of each factor level in the absolute count of cluster members
cust.long.p <- cust.long.q %>%
group_by(clust.num, variable) %>%
mutate(Percentage = count / sum(count)) %>%
arrange(clust.num)
covFoodData$cycle_phase_covariate <- as.factor(covFoodData$cycle_phase_covariate)
covFoodData$cycle_phase_covariate <-ifelse(covFoodData$cycle_phase_covariate == 0,
"Follicular and Ovulation phase",
ifelse(covFoodData$cycle_phase_covariate == 1, "Luteal phase", "Menstrual phase"))
covFoodData$cycle_phase_covariate <- as.factor(covFoodData$cycle_phase_covariate)
variable_name <- c(rep("Diet importance",3),
rep("Diet success",3),
rep("Cycle phase",3),
rep("Appetite pre experiment",3),
rep("Appetite post experiment",3))
variable_name2 <- c(levels(covFoodData$diet_importance_cat),
levels(covFoodData$diet_success_cat),
levels(covFoodData$cycle_phase_covariate),
levels(covFoodData$appetite_pre_cat),
levels(covFoodData$appetite_post_cat))
heatmap.p <- ggplot(cust.long.p, aes(x = clust.num, y = merge)) +
geom_tile(aes(fill = Percentage), alpha = 0.85)+
labs(title = "Distribution of characteristics across clusters",
x = "Cluster number", y = NULL) +
geom_hline(yintercept = 12.5) +
geom_hline(yintercept = 3.5) +
geom_hline(yintercept = 6.5) +
geom_hline(yintercept = 9.5) +
scale_fill_gradient2(low = "darkslategray1", mid = "yellow",
high = "turquoise4")+
scale_y_discrete(labels=(levels(factor(paste(variable_name,
paste0("",variable_name2,""),sep="\n")))))
heatmap.p + theme_classic()
data("covFoodData")
covFoodData <- covFoodData[-c(7,8,9,10,12),]
covFoodData$appetite_post_scaled <- (covFoodData$appetite_post - min(covFoodData$appetite_post))/(max(covFoodData$appetite_post) -min(covFoodData$appetite_post))
covFoodData$diet_importance_scaled <- (covFoodData$diet_importance - min(covFoodData$diet_importance))/(max(covFoodData$diet_importance) -min(covFoodData$diet_importance))
covFoodData$appetite_pre_scaled <- (covFoodData$appetite_pre - min(covFoodData$appetite_pre))/(max(covFoodData$appetite_pre) -min(covFoodData$appetite_pre))
covFoodData$diet_success_scaled <- (covFoodData$diet_success - min(covFoodData$diet_success))/(max(covFoodData$diet_success) -min(covFoodData$diet_success))
covFoodData$diet_importance_cat <-cut(covFoodData$diet_importance_scaled, 3)
covFoodData$diet_success_cat <-cut(covFoodData$diet_success_scaled, 3)
covFoodData$appetite_pre_cat <-cut(covFoodData$appetite_pre_scaled, 3)
covFoodData$appetite_post_cat <-cut(covFoodData$appetite_post_scaled, 3)
#colors = c("#00C1B2", "#ED90A4", "#D494E1", "#CCA65A","#6FB1E7", "#7EBA68")
cbind(covFoodData, clust.num) %>%
dplyr::select(appetite_pre_scaled, appetite_post_scaled, diet_importance_scaled, diet_success_scaled, clust.num) %>%
mutate(clust.num = as.factor(clust.num)) %>%
tidyr::gather(cols, value, -clust.num) %>%
ggplot(aes(x = value, group = clust.num, fill = clust.num)) +
geom_boxplot() + facet_wrap(cols~ .,  scales = "free",
labeller = as_labeller(c(
'appetite_post_scaled'="Appetite post exp",
'appetite_pre_scaled'="Appetite pre exp",
'diet_importance_scaled'="Diet Importance",
'diet_success_scaled'="Diet Success"
))) +
theme(text = element_text(size = 20))+ xlab("") +
# scale_fill_manual(values=colors) +
guides(fill=guide_legend(title="Clusters")) + theme_classic()
load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/output_R_dist.RData")
outR <- out
load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/output_img_dist.RData")
outimg <- out
load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/output_img_raw_dist.RData")
outimgraw <- out
sum(outimg == 0, na.rm = TRUE)
sum(outR == 0, na.rm = TRUE)
sum(outimgraw == 0, na.rm = TRUE)
plot(as.vector(outimg),as.vector(outimgraw))
plot(as.vector(outR),as.vector(outimg), xlim = c(700,800),ylim=c(150000,250000))
plot(as.vector(outR),as.vector(outimg))
plot(as.vector(outR),as.vector(outimg), xlim = c(10,25), ylim = c(1000000,max(as.vector(outimg))))
plot(as.vector(outR),as.vector(outimg), xlim = c(10,25), ylim = c(1000000,max(as.vector(outimg))+1))
plot(as.vector(outR),as.vector(outimg), xlim = c(10,25), ylim = c(1000000,max(as.vector(outimg))+10))
plot(as.vector(outR),as.vector(outimg), xlim = c(10,25), ylim = c(1000000,max(as.vector(outimg))+1000))
plot(as.vector(outR),as.vector(outimg), xlim = c(10,25), ylim = c(1000000,max(as.vector(outimg))+10000))
plot(as.vector(outR),as.vector(outimg), xlim = c(10,25), ylim = c(1000000,max(as.vector(outimg))+100000))
data.frame(distR = as.vector(outR),
distXaligned = as.vector(outimg)) %>%
dplyr::filter(distR >= 0)
db <- data.frame(distR = as.vector(outR),
distXaligned = as.vector(outimg)) %>%
dplyr::filter(distR >= 0)
ggplot(db) +
geom_point(aes(x = distR, y = distXaligned))
db <- data.frame(distR = as.vector(outR),
distXaligned = as.vector(outimg)) %>%
dplyr::filter(distR > 0)
ggplot(db) +
geom_point(aes(x = distR, y = distXaligned))
ggplot(db) +
geom_point(aes(x = distR, y = distXaligned)) + theme_classic() +
xlab(expression(d[Ro]))
ggplot(db) +
geom_point(aes(x = distR, y = distXaligned)) + theme_classic() +
xlab(expression(d[Ro]))+
xlab(expression(d[Re]))
ggplot(db) +
geom_point(aes(x = distR, y = distXaligned)) + theme_classic() +
xlab(expression(d[Ro]))+
ylab(expression(d[Re]))
ggplot(db) +
geom_point(aes(x = distR, y = distXaligned)) + theme_classic() +
xlab(expression(d[Ro](.)))+
ylab(expression(d[Re](.)))
ggplot(db) +
geom_point(aes(x = distR, y = distXaligned)) + theme_classic() +
xlab(expression(D[Ro](.)))+
ylab(expression(D[Re](.)))
cor(as.vector(outR),as.vector(outimg))
cor(db$distR,db$distXaligned)
load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/output_R_dist.RData")
stress <-c()
for(i in 1:20){
stress[i] <- mds(out,ndim = i,
type = "mspline")$stress
}
#Plot:
ggplot()+ geom_line(aes(x = c(1:20), y = stress)) +
geom_hline(yintercept = 0.05, color = "red", lty = 2) + theme_classic() +
xlab("Number of dimensions") +
geom_vline(xintercept = which(stress < 0.05)[1], color = "red", lty = 2)+
theme(text = element_text(size=20))
which(stress < 0.05)[1]
ggplot(db) +
geom_point(aes(x = distR, y = distXaligned)) + theme_classic() +
xlab(expression(D[Ro](.)))+
ylab(expression(D[Re](.)))+
theme(text = element_text(size=20))
#Plot:
ggplot()+ geom_line(aes(x = c(1:20), y = stress)) +
geom_hline(yintercept = 0.05, color = "red", lty = 2) + theme_classic() +
xlab("Number of dimensions") +
geom_vline(xintercept = which(stress < 0.05)[1], color = "red", lty = 2)+
theme(text = element_text(size=20))
library(Rtsne)
library(tidyverse)
load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/output_R_dist.RData")
data("covFoodData")
covFoodData <- covFoodData[-c(7,8,9,10,12),]
covFoodData$appetite_post_scaled <- (covFoodData$appetite_post - min(covFoodData$appetite_post))/(max(covFoodData$appetite_post) -min(covFoodData$appetite_post))
covFoodData$diet_importance_scaled <- (covFoodData$diet_importance - min(covFoodData$diet_importance))/(max(covFoodData$diet_importance) -min(covFoodData$diet_importance))
covFoodData$appetite_pre_scaled <- (covFoodData$appetite_pre - min(covFoodData$appetite_pre))/(max(covFoodData$appetite_pre) -min(covFoodData$appetite_pre))
covFoodData$diet_success_scaled <- (covFoodData$diet_success - min(covFoodData$diet_success))/(max(covFoodData$diet_success) -min(covFoodData$diet_success))
covFoodData$diet_importance_cat <-cut(covFoodData$diet_importance_scaled, 3)
covFoodData$diet_success_cat <-cut(covFoodData$diet_success_scaled, 3)
covFoodData$appetite_pre_cat <-cut(covFoodData$appetite_pre_scaled, 3)
covFoodData$appetite_post_cat <-cut(covFoodData$appetite_post_scaled, 3)
pp_app_pre <- list()
pp_app_post <- list()
pp_diet <- list()
for(i in c(1:9)){
tsne_out <- Rtsne(out,
dims = 2,
perplexity = i)
tSNE_df <- tsne_out$Y %>%
as.data.frame() %>%
rename(tSNE1="V1",
tSNE2="V2") %>%
mutate(ID=row_number())
covFoodData <-
covFoodData %>%
mutate(ID=row_number())
tSNE_df <- tSNE_df %>%
inner_join(covFoodData, by="ID")
pp_app_post[[i]] <-   tSNE_df %>%
ggplot(aes(x = tSNE1,
y = tSNE2,
color = appetite_post_scaled,
shape = as.factor(cycle_phase_covariate)))+
geom_point()+
theme(legend.position="bottom")
pp_app_pre[[i]] <-   tSNE_df %>%
ggplot(aes(x = tSNE1,
y = tSNE2,
color = appetite_pre_scaled,
shape = as.factor(cycle_phase_covariate)))+
geom_point()+
theme(legend.position="bottom")
pp_diet[[i]] <-   tSNE_df %>%
ggplot(aes(x = tSNE1,
y = tSNE2,
color = diet_importance_scaled,
shape = as.factor(cycle_phase_covariate)))+
geom_point()+
theme(legend.position="bottom")
}
i
for(i in c(1:7)){
tsne_out <- Rtsne(out,
dims = 2,
perplexity = i)
tSNE_df <- tsne_out$Y %>%
as.data.frame() %>%
rename(tSNE1="V1",
tSNE2="V2") %>%
mutate(ID=row_number())
covFoodData <-
covFoodData %>%
mutate(ID=row_number())
tSNE_df <- tSNE_df %>%
inner_join(covFoodData, by="ID")
pp_app_post[[i]] <-   tSNE_df %>%
ggplot(aes(x = tSNE1,
y = tSNE2,
color = appetite_post_scaled,
shape = as.factor(cycle_phase_covariate)))+
geom_point()+
theme(legend.position="bottom")
pp_app_pre[[i]] <-   tSNE_df %>%
ggplot(aes(x = tSNE1,
y = tSNE2,
color = appetite_pre_scaled,
shape = as.factor(cycle_phase_covariate)))+
geom_point()+
theme(legend.position="bottom")
pp_diet[[i]] <-   tSNE_df %>%
ggplot(aes(x = tSNE1,
y = tSNE2,
color = diet_importance_scaled,
shape = as.factor(cycle_phase_covariate)))+
geom_point()+
theme(legend.position="bottom")
}
pp_diet
which(stress < 0.05)
stress[11]
library(dplyr)
library(ggplot2)
########################rotation matrix########################
rm(list = ls())
load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/output_mds_R.RData")
db$cycle_phase_covariate <- as.factor(db$cycle_phase_covariate)
db$cycle_phase_covariate <-ifelse(db$cycle_phase_covariate == 0,
"Follicular and Ovulation phase",
ifelse(db$cycle_phase_covariate == 1, "Luteal phase", "Menstrual phase"))
db$appetite_post_scaled <- (db$appetite_post - min(db$appetite_post))/(max(db$appetite_post) -min(db$appetite_post))
db$diet_importance_scaled <- (db$diet_importance - min(db$diet_importance))/(max(db$diet_importance) -min(db$diet_importance))
db$appetite_pre_scaled <- (db$appetite_pre - min(db$appetite_pre))/(max(db$appetite_pre) -min(db$appetite_pre))
db$diet_success_scaled <- (db$diet_success - min(db$diet_success))/(max(db$diet_success) -min(db$diet_success))
db$diet_importance_cat <-cut(db$diet_importance_scaled, 3)
db$diet_success_cat <-cut(db$diet_success_scaled, 3)
db$appetite_pre_cat <-cut(db$appetite_pre_scaled, 3)
db$appetite_post_cat <-cut(db$appetite_post_scaled, 3)
db$appetite_scaled <-(db$appetite_post - db$appetite_pre)/(db$appetite_pre)
dim_name <- colnames(db)[grepl( "D" , names( db ) )]
mod1 <- lm(paste0("diet_importance_scaled ~ ", paste0(dim_name, collapse = "+")),
data = db)
summary(mod1)
mod1 <- lm(paste0("diet_success_scaled ~ ", paste0(dim_name, collapse = "+")),
data = db)
summary(mod1)
0.0013*5
hc <- hclust(as.dist(out))
load("C:/Users/livio/Desktop/mds/Data/FoodData/Output/output_R_dist.RData")
covFoodData <- covFoodData[-c(7,8,9,10,12),]
hc <- hclust(as.dist(out))
plot(hc)
hc2 <- cutree(hc, k=2)
table(hc2)
library(pARI)
